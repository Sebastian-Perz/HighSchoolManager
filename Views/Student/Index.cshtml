@model PagedList.IPagedList<HighSchoolManager.Models.Student>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<style>
    body {
        background-image: url(/Content/divisions-bg.png);
    }

    a {
        color: darkblue;
        font-size: 16px;
        font-weight: 700;
    }

        a:hover {
            text-decoration: none;
            color: white;
        }


    td {
        color: dimgrey;
        font-family: 'Thasadith', sans-serif;
        font-weight: 900;
        font-size: 16px;
    }

    th {
        color: black;
        font-family: 'Fira Sans Condensed', sans-serif;
        font-size: 18px;
    }

    p {
        color: darkblue;
        font-size: 18px;
    }

    h2 {
        font-family: 'Fira Sans Condensed', sans-serif;
        color: black;
        font-weight: 600;
    }
</style>
@{
    ViewBag.Title = "Students";
}

<h2>Students</h2>

@if (User.IsInRole("Admin") || User.IsInRole("Professor"))
{
<h2>
    @Html.ActionLink("Create a new student", "Create")
</h2>
}


@using (Html.BeginForm("Index", "Student", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Date of birth", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Assignment Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AssignmentDate)
            </td>

            @if (User.IsInRole("Admin") || User.IsInRole("Professor"))
            {
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
            }

        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
